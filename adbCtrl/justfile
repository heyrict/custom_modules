s := `typeset -A v=$(adb devices | tail +2 | cut -d"	" -f1); echo ${v[0]}`

default_time := '200'
#touchpad_evdev := `echo 'for line in $(adb shell getevent -lp 2>/dev/null | egrep -o "(/dev/input/event\S+)"); do output=$(adb shell getevent -lp $line); [[ "$output" == *"ABS_MT"* ]] && echo "$line"; done; true' | bash`

replay_dir := 'replay_files'
replay_bin := 'eventrec'
replay_android_bin := '/data/local/tmp/eventrec'

screenshot:
	adb -s {{s}} shell screencap -p /sdcard/autojump.png
	adb -s {{s}} pull /sdcard/autojump.png /tmp/autojump.png
	adb -s {{s}} shell rm /sdcard/autojump.png
	gimp /tmp/autojump.png

#get-touchpad:
#	echo {{ touchpad_evdev }}

record-init:
	adb -s {{s}} push {{replay_bin}} {{replay_android_bin}}
	adb -s {{s}} shell chmod u+x {{replay_android_bin}}

record FILE:
	adb -s {{s}} shell "{{replay_android_bin}}" -r "/data/local/tmp/{{FILE}}.record"

record-get FILE DIR=replay_dir:
	if [ ! -d "{{DIR}}" ]; then mkdir "{{DIR}}"; fi;
	adb -s {{s}} pull "/data/local/tmp/{{FILE}}.record" "{{DIR}}"

record-getall DIR=replay_dir:
	if [ ! -d "{{DIR}}" ]; then mkdir "{{DIR}}"; fi;
	adb -s {{s}} pull `just record-list` "{{DIR}}"

record-list:
	adb -s {{s}} shell ls /data/local/tmp/*.record

record-clean:
	adb -s {{s}} shell rm /data/local/tmp/*.record

replay FILE:
	if [ -f "{{FILE}}" ]; then \
		adb -s {{s}} push "{{FILE}}" /data/local/tmp/; \
		adb -s {{s}} shell "{{replay_android_bin}}" -p "/data/local/tmp/$(basename {{FILE}})"; \
	else \
		adb -s {{s}} shell "{{replay_android_bin}}" -p "/data/local/tmp/{{FILE}}.record"; \
	fi;

@tap X Y:
	adb -s {{s}} shell input tap {{X}} {{Y}}

@menu:
	adb -s {{s}} shell input keyevent 1

@home:
	adb -s {{s}} shell input keyevent 3

@back:
	adb -s {{s}} shell input keyevent 4

@swipe AX AY BX BY TIME=default_time:
	adb -s {{s}} shell input swipe {{AX}} {{AY}} {{BX}} {{BY}} {{TIME}}

# ========== Arsnotoria =========

arsnotoria-loop:
	# Retry
	just s={{s}} tap 272 1768
	just s={{s}} tap 752 1432
	# Battle
	#sleep 65s # For Event 2/1
	#sleep 62s # For Normal 1-7
	#sleep 50s # For Hard 1-1
	sleep 98s # For Hard 1-14
	#sleep 90s # For Hard 3-17
	#sleep 125s # For Hard 4-11
	#sleep 130s # For Hard 4-12
	#sleep 83s # For Hard 4-4
	#sleep 117 # For Event 2 Hard 2
	#sleep 235 # For Event 1 Ex 1
	#sleep 220 # For Event 2 Ex 1
	just s={{s}} tap 272 1768
	just s={{s}} tap 272 1768
	sleep 5s
	just s={{s}} tap 272 1768
	just s={{s}} tap 272 1768
	sleep 2s
	just s={{s}} tap 272 1768
	just s={{s}} tap 272 1768
	sleep 2s
	just s={{s}} tap 272 1768
	just s={{s}} tap 272 1768
	sleep 2s
	just s={{s}} tap 272 1768
	just s={{s}} tap 272 1768
	sleep 2s
	just s={{s}} tap 272 1768
	just s={{s}} tap 272 1768
	sleep 2s
	just s={{s}} tap 272 1768
	just s={{s}} tap 272 1768


# ========== Taobao =========

next-page:
	just s={{s}} swipe 1500 500 500 500

prev-page:
	just s={{s}} swipe 500 500 1500 500

taobao-tapnwait X Y:
	# Tap {{X}} {{Y}}
	just s={{s}} tap {{X}} {{Y}}
	# Wait for page to load
	sleep 8s
	## Scrolling
	just s={{s}} swipe 500 1500 500 300
	#just s={{s}} swipe 500 1500 500 300; sleep 1s;
	# Wait for 20 seconds
	sleep 18s
	# Back
	just s={{s}} back
	# Wait for page to load
	sleep 5s;

alipay-tapnwait X Y:
	# Tap {{X}} {{Y}}
	just s={{s}} tap {{X}} {{Y}}
	# Wait for page to load
	sleep 8s
	## Scrolling
	for i in `seq 1 3`; do \
		just s={{s}} swipe 501 1510 510 310; sleep 1s; \
		just s={{s}} swipe 502 401 502 1310; sleep 1s; \
		just s={{s}} swipe 503 1510 530 313; sleep 1s; \
		just s={{s}} swipe 504 501 504 1210; sleep 1s; \
	done
	# Back
	just s={{s}} back
	# Wait for page to load
	sleep 5s;

taobao-2020-button N FB_X FB_Y STEP:
	#!/usr/bin/env bash
	case "{{N}}" in
		0) just s={{s}} taobao-tapnwait {{FB_X}} {{FB_Y}} ;;
		1) y=`echo {{FB_Y}}+{{STEP}} | bc` && just s={{s}} taobao-tapnwait {{FB_X}} $y ;;
		2) y=`echo {{FB_Y}}+{{STEP}}*2 | bc` && just s={{s}} taobao-tapnwait {{FB_X}} $y ;;
		3) y=`echo {{FB_Y}}+{{STEP}}*3 | bc` && just s={{s}} taobao-tapnwait {{FB_X}} $y ;;
		4) y=`echo {{FB_Y}}+{{STEP}}*4 | bc` && just s={{s}} taobao-tapnwait {{FB_X}} $y
	esac

alipay-2020-button N FB_X FB_Y STEP:
	#!/usr/bin/env bash
	case "{{N}}" in
		0) just s={{s}} alipay-tapnwait {{FB_X}} {{FB_Y}} ;;
		1) y=`echo {{FB_Y}}+{{STEP}} | bc` && just s={{s}} alipay-tapnwait {{FB_X}} $y ;;
		2) y=`echo {{FB_Y}}+{{STEP}}*2 | bc` && just s={{s}} alipay-tapnwait {{FB_X}} $y ;;
		3) y=`echo {{FB_Y}}+{{STEP}}*3 | bc` && just s={{s}} alipay-tapnwait {{FB_X}} $y ;;
		4) y=`echo {{FB_Y}}+{{STEP}}*4 | bc` && just s={{s}} alipay-tapnwait {{FB_X}} $y
	esac

# 2021
@_taobao_loop BUTTON="1" TIMES="10" FB_X="890" FB_Y="840" STEP="195":
	for i in `seq 1 {{TIMES}}`; do \
		echo ">>> LOOP i = $i"; \
		just s={{s}} taobao-2020-button {{BUTTON}} {{FB_X}} {{FB_Y}} {{STEP}}; \
		sleep 1; \
	done;

@_alipay_loop BUTTON="1" TIMES="10" FB_X="890" FB_Y="840" STEP="195" CX="555" CY="1200":
	for i in `seq 1 {{TIMES}}`; do \
		echo ">>> LOOP i = $i"; \
		just s={{s}} alipay-2020-button {{BUTTON}} {{FB_X}} {{FB_Y}} {{STEP}}; \
		just s={{s}} tap {{CX}} {{CY}}; \
		sleep 1; \
	done;

@taobao TYPE BUTTON="1" TIMES="10":
	#!/usr/bin/env bash
	case "{{TYPE}}" in
		me) just s=UYT0217A23002544 _taobao_loop {{BUTTON}} {{TIMES}} 890 840 195;;
		ma) just s=5EF0217C08019128 _taobao_loop {{BUTTON}} {{TIMES}} 870 1030 195;;
		gma) just s=ABXL6R1610002136 _taobao_loop {{BUTTON}} {{TIMES}} 600 700 140
	esac

@alipay TYPE BUTTON="1" TIMES="10":
	#!/usr/bin/env bash
	case "{{TYPE}}" in
		me) just s=UYT0217A23002544 _alipay_loop {{BUTTON}} {{TIMES}} 895 602 199;;
		ma) just s=5EF0217C08019128 _alipay_loop {{BUTTON}} {{TIMES}} 895 602 199;;
	esac

@wait TIME="15":
	echo "Wait {{TIME}} seconds"
	for ((i=1;i<{{TIME}};i+=4)); do \
		just s={{s}} swipe 500 1500 500 300 && sleep 2;\
		just s={{s}} swipe 500 200 500 1400 && sleep 2;\
	done
